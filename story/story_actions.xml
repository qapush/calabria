<krpano>


	<!-- INITIALIZE STORY VARIABLES -->

	<action name="story_init" autorun="preinit" >

	

		set(started,0);
		set(story_step,0);
		set(story_length,0);
		for(set(i,0), i LT action.count, inc(i), 
		  if(action[get(i)].type == "step",inc(story_length); ,);
		);  
		
				 
		
		
	</action>
	
	<!-- PREV NEXT ACTIONS -->
	
	<action name="story_next">
		inc(story_step); 

		
		txtadd(next_step_name,'action_',get(story_step));
		
		if(story_step GT 1,
			set(layer[prev].visible,true);
			set(layer[prev].enabled,true);
				,
		);
		
		if(story_step == get(story_length),
			set(visible,false);
			set(enabled,false);
				,
		);
		
		
		action(get(next_step_name));
		 
	
 
	</action> 
	
	
	<action name="story_prev"> 
		
		dec(story_step);


		if(xml.scene != current_scene, toscene(get(current_scene)););
		txtadd(prev_step_name,'action_',get(story_step));
		
		if(story_step == 1,
			set(layer[prev].visible,false)
			set(layer[prev].enabled,false)
				,
		);
		
		if(story_step LT get(story_length),
			set(layer[next].visible,true);
			set(layer[next].enabled,true);
				,
		);	
				
		action(get(prev_step_name));
			
	</action>




	<!-- REORDER BUTTONS ACTION -->

	<action name="reorderbuttons">


		
		if(stagewidth LT 1200,
			
			set(layer[next].align, rightbottom);
			set(layer[next].edge, right);
			set(layer[next].y, 200px);
			set(layer[next].x, -40px);
			set(layer[next].url, "story/next_mobile.svg");

			set(layer[prev].align, leftbottom);
			set(layer[prev].edge, left);
			set(layer[prev].y, 200px);
			set(layer[prev].x, -40px);

			set(layer[prev].url, "story/prev_mobile.svg");


				,	set(layer[next].align, bottom);
					set(layer[next].edge, left);
					set(layer[next].url, "story/next.svg");
					set(layer[next].y, 200); 
					set(layer[next].x, 10); 

					set(layer[prev].align, bottom);
					set(layer[prev].edge, right);
					set(layer[prev].url, "story/prev.svg");
					set(layer[prev].y, 200); 
					set(layer[prev].x, -10); 
		);

	</action>

	<!-- HOTSPOT ACTIONS -->
	
		
	<action name="setuppops">

		for(set(i,0), i LT hotspot.count, inc(i), 
 			 
			
			if(hotspot[get(i)].style === 'spot'
				,
				set(pop_ath, get(hotspot[get(i)].ath));
				set(pop_atv, get(hotspot[get(i)].atv));
				txtadd(popname, get(hotspot[get(i)].name), '_pop' );
				
				set(hotspot[get(popname)].atv, get(pop_atv));
				set(hotspot[get(popname)].ath, get(pop_ath));

					,
					<!-- else -->
			  );

				
		);	

	</action>

	<action name="close_pops">

		for(set(i,0), i LT hotspot.count, inc(i), 
 			 
			
			if(hotspot[get(i)].style === 'pop'
				,
	
				tween(hotspot[get(i)].alpha, 0, 0.3);
					,
					<!-- else -->
			  );

				
		);	

		for(set(i,0), i LT hotspot.count, inc(i), 
 			 
			
			if(hotspot[get(i)].style === 'spot'
				,
	
				set(hotspot[get(i)].url, "%HTMLPATH%/skin/hs.svg");
				set(hotspot[get(i)].onclick, click_open());
					,
					<!-- else -->
			  );

				
		);

	</action>
	
	<action name="click_open">

		set(onclick, click_close(); );
		txtadd(mypop, get(name),'_pop');
		tween(hotspot[get(mypop)].alpha, 1, 0.3);
		set(url, "%HTMLPATH%/skin/hs_close.svg");


	</action>

	<action name="click_close">
	
		set(onclick, click_open(); );
		txtadd(mypop, get(name),'_pop');
		tween(hotspot[get(mypop)].alpha, 0, 0.3);
		set(url, "%HTMLPATH%/skin/hs.svg");


	</action>

	<action name="showimage">

		jscall( showimage (%1, %2) );



	</action>

	<action name="toscene">

		if(xml.scene != %1,
			loadscene(%1,null,MERGE, get(skin_settings.loadscene_blend));, 
			);

		set(current_scene, %1);

	</action>

	
	

	

	


	
	<!-- EVENTS -->

	<!-- named -->

	<events name="story_events"
		keep="true"
		onenterfullscreen=""
        onexitfullscreen=""
        onxmlcomplete=""
        onpreviewcomplete=""
        onloadcomplete="setuppops()"
        onblendcomplete=""
        onnewpano=""
        onremovepano=""
        onnewscene=""
        onxmlerror=""
        onloaderror=""
        onkeydown=""
        onkeyup=""
        onclick=""
        onsingleclick=""
        ondoubleclick="" 
        onmousedown=""
        onmouseup=""
        onmousewheel=""
        oncontextmenu=""
        onidle=""
        onviewchange=""
        onviewchanged=""
        onresize=""
        onframebufferresize=""
        onautorotatestart=""
        onautorotatestop=""
        onautorotateoneround=""
        onautorotatechange=""
        oniphonefullscreen=""
        gyro_onavailable=""
        gyro_onunavailable=""
        gyro_onenable=""
        gyro_ondisable=""
        webvr_onavailable=""
        webvr_onunavailable=""
        webvr_onunknowndevice=""
        webvr_onentervr=""
        webvr_onexitvr=""
        />

	<!-- UNNAMED EVENTS -->
	<events
		onenterfullscreen=""
        onexitfullscreen=""
        onxmlcomplete=""
        onpreviewcomplete=""
        onloadcomplete=""
        onblendcomplete=""
        onnewpano=""
        onremovepano=""
        onnewscene=""
        onxmlerror=""
        onloaderror=""
        onkeydown=""
        onkeyup=""
        onclick=""
        onsingleclick=""
        ondoubleclick="" 
        onmousedown=""
        onmouseup=""
        onmousewheel=""
        oncontextmenu=""
        onidle=""
        onviewchange=""
        onviewchanged=""
        onresize="reorderbuttons();"
        onframebufferresize=""
        onautorotatestart=""
        onautorotatestop=""
        onautorotateoneround=""
        onautorotatechange=""
        oniphonefullscreen=""
        gyro_onavailable=""
        gyro_onunavailable=""
        gyro_onenable=""
        gyro_ondisable=""
        webvr_onavailable=""
        webvr_onunavailable=""
        webvr_onunknowndevice=""
        webvr_onentervr=""
        webvr_onexitvr=""
        />


	

</krpano>
